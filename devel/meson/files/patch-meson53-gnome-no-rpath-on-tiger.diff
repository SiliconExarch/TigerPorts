--- mesonbuild/modules/gnome.py.orig	2020-03-29 17:43:40.000000000 -0700
+++ mesonbuild/modules/gnome.py	2020-03-29 17:47:25.000000000 -0700
@@ -289,8 +289,8 @@
         if isinstance(lib, build.SharedLibrary):
             libdir = os.path.join(state.environment.get_build_dir(), state.backend.get_target_dir(lib))
             link_command.append('-L' + libdir)
-            if include_rpath:
-                link_command.append('-Wl,-rpath,' + libdir)
+            #KEN if include_rpath:
+            #KEN    link_command.append('-Wl,-rpath,' + libdir)
             depends.append(lib)
             # Needed for the following binutils bug:
             # https://github.com/mesonbuild/meson/issues/1911
@@ -299,8 +299,8 @@
             for d in state.backend.determine_rpath_dirs(lib):
                 d = os.path.join(state.environment.get_build_dir(), d)
                 link_command.append('-L' + d)
-                if include_rpath:
-                    link_command.append('-Wl,-rpath,' + d)
+                #KEN if include_rpath:
+                #KEN    link_command.append('-Wl,-rpath,' + d)
         if gir_has_option(self.interpreter, '--extra-library') and use_gir_args:
             link_command.append('--extra-library=' + lib.name)
         else:
@@ -357,8 +357,8 @@
                             getattr(dep, 'is_libtool', False)):
                         lib_dir = os.path.dirname(lib)
                         external_ldflags.update(["-L%s" % lib_dir])
-                        if include_rpath:
-                            external_ldflags.update(['-Wl,-rpath {}'.format(lib_dir)])
+                        #KEN if include_rpath:
+                        #KEN    external_ldflags.update(['-Wl,-rpath {}'.format(lib_dir)])
                         libname = os.path.basename(lib)
                         if libname.startswith("lib"):
                             libname = libname[3:]
